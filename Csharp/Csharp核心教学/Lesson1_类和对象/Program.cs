namespace Lesson1_类和对象
{
    #region 知识回顾 面向对象概念回顾
    //万物皆对象
    //用程序来抽象（形容）对象
    //用面向对象的思想来编程
    #endregion


    #region 知识点一 什么是类
    //基本概念
    //  具有相同特征
    //  具有相同行为
    //  一类事物的抽象
    //  类是对象的模板
    //  可以通过类创建出对象
    //  类的关键词
    //  class
    #endregion


    #region 知识点二 类申明在哪里
    //类一般申明在namespace（命名空间）语句块中
    #endregion


    #region 知识点三 类申明的语法
    //访问修饰符（public、private...） class 类名
    //{
    //    //特征——成员变量
    //    //行为——成员方法
    //    //保护特征——成员属性

    //    //构造函数和析构函数
    //    //索引器
    //    //运算符重载
    //    //静态成员
    //}
    #endregion


    #region 知识点四 类申明实例
    //这个类用于形容人类
    //命名：帕斯卡命名法
    //注意：同一个语句块中的不同类不能重名
    //class Person { }
    class Person
    {
        //特征——成员变量
        //行为——成员方法
        //保护特征——成员属性

        //构造函数和析构函数
        //索引器
        //运算符重载
        //静态成员
    }
    //这个类用来表示机器
    class Machine
    {
        //特征——成员变量
        //行为——成员方法
        //保护特征——成员属性

        //构造函数和析构函数
        //索引器
        //运算符重载
        //静态成员
    }
    #endregion






    internal class Program
    {
        static void Main(string[] args)
        {

            #region 知识点五 什么是（类）对象
            //基本概念
            //  类的申明和类对象（变量）申明是两个概念
            //  类的申明类似枚举和结构体的申明，类的申明相当于申明了一个自定义变量类型
            //  而对象是类创建出来的
            //  相当于申明一个指定类的变量
            //  类创建对象的过程一般称为实例化对象
            //  类对象都是引用类型的
            #endregion


            #region 知识点六 实例化对象基本语法
            //类名 变量名;
            //类名 变量名 = null;    (null代表空、不分配堆内存空间)
            //类名 变量名 = new 类名;
            #endregion


            #region 知识点七 实例化对象
            Person p;                       //在栈上给p占一个地址，为了进行下一步存储堆里的内存
            Person p2 = null;               //在栈上给p2占一个地址，为了进行下一步存储堆里的内存

            //注意
            //  虽然他们来自一个类的实例化对象
            //  但是他们的特征、行为等等信息都是他们独有的
            //  千万不要觉得他们是共享了数据，两个人你是你、我是我，彼此没有关系
            Person p3 = new Person();       //在栈、堆里给p3占了一个房间，通过栈地址指向堆内存
                                            //相当一个人对象
            Person p4 = new Person();       //相当于另一个人对象

            Machine machine = new Machine();
            Machine machine2 = new Machine();

            //面向对象编程就是开启了女娲模式、造物模式，想要什么对象就new什么对象
            //一切的对象都是由我们来掌控的
            //我们相当于是整个程序世界的总导演
            #endregion


            //总结
            //  类的申明和类对象的申明是两个概念
            //  类的申明是申明对象的模板 用于抽象（形容）显示事物   adj.
            //  类对象的申明是用来表示现实中的对象个体             n.

            //类是一个自定义的变量类型
            //实例化一个类对象 就是在申明变量


        }
    }
}
